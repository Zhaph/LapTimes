@{
    ViewBag.Title = "Let's Race!";
}
@section featured {
<section class="featured">
  <div class="content-wrapper" data-bind="with: CurrentRace">
    <hgroup class="title">
      <h1>Let's Race:</h1>
      <h2 data-bind="visible: !IsActive()">@ViewBag.Message</h2>
      <h2 id="raceStatus" data-bind="visible: IsActive()">We have a race!</h2>
    </hgroup>
    <!-- ko if: IsActive() -->
    <div id="raceDetails">
      <ul class="home-current-racers" data-bind="foreach: Drivers">
        <li>
          <i class="fa fa-tachometer" data-bind="css: { ready: $parent.State() == 'ready', gogogo: $parent.State() == 'gogogo', finished: $parent.State() == 'finished' }"></i>
          In lane <span data-bind="text: Lane"></span>: 
          <span data-bind="text: Name" class="home-driver-name"></span> 
          is driving car number <span data-bind="text: Car" class="home-car-name"></span>
          <!-- ko if: $parent.State() == 'finished' && $parent.IsComplete -->
          - Finished in: <span class="home-driver-time" data-bind="css: { 'new-pb': NewPersonalBest }, text: RaceTime()"></span>
          <span data-bind="visible: NewPersonalBest"><i class="fa fa-arrow-left"></i> New Personal Best!</span>
          <span data-bind="visible: Winner"><i class="fa fa-trophy fa-2x gold"></i> Winner!</span>
          <!-- /ko -->
        </li>
      </ul>
      <ul class="home-reference">
        <li><i class="fa fa-tachometer ready"></i> Waiting to race</li>
        <li><i class="fa fa-tachometer gogogo"></i> Race in progress</li>
        <li><i class="fa fa-tachometer finished"></i> Race is over, waiting for winners</li>
      </ul>
    </div>
    <!-- /ko -->
  </div>
</section>
}
<h3 style="text-align: center;"><i class="fa fa-flag-checkered fa-lg"></i> Current Leaders <i class="fa fa-flag-checkered fa-lg"></i></h3>
<div data-bind="foreach:Leagues" class="clear-fix">
  <div data-bind="style: { width: $root.getWidth()}" class="float-left home-racer-container">
    <h4 data-bind="text: Name"></h4>
    <ul data-bind="foreach: Racers" class="home-racer-list">
      <li>
        <h5>
          <!-- ko if: $index() === 0 -->
          <i class="fa fa-trophy fa-2x gold"></i>
          <!-- /ko -->
          <!-- ko if: $index() === 1 -->
          <i class="fa fa-trophy fa-lg silver"></i>
          <!-- /ko -->
          <!-- ko if: $index() === 2 -->
          <i class="fa fa-trophy bronze"></i>
          <!-- /ko -->
          <span data-bind="text: FormattedName()"></span>
        </h5>
        <p data-bind="text: BestTime()"></p>
      </li>
    </ul>
  </div>
</div>


<audio src="~/Content/TheChain.mp3#t=2" type="audio/mp3" id="theChain" preload="auto"></audio>
<audio src="~/Content/Start.wav#t=,3.2" type="audio/wav" id="theStart" preload="auto"></audio>


@section scripts {
  @Scripts.Render("~/bundles/Knockout")
  <script src="~/signalr/hubs"></script>

  <script>
    $(function () {

      var theChain = $('#theChain').get(0);
      var vol = 1;
      var interval = 200;

      function LeaguesViewModel() {
        var self = this;
        self.Leagues = ko.observableArray([]);
        self.CurrentRace = ko.observable();

        var race = $.connection.raceHub;

        //Initializes the view model
        self.init = function () {
          race.server.getAllLeagues();
        };

        self.updateLeagues = function (currentLeaderBoards) {
          var mappedLeagues = $.map(currentLeaderBoards, function (item) {
            if (item && item.length > 0) {
              return new League(item);
            }
          });

          self.Leagues(mappedLeagues);
        };

        self.updateRace = function (currentRace) {
          self.CurrentRace(new CurrentRace(currentRace));
          var raceStatus = $('#raceStatus');
          var theStart = $('#theStart').get(0);

          if (self.CurrentRace().IsActive()) {
            switch (self.CurrentRace().State()) {
              case "ready":
                raceStatus.html("We have a race!");
                theChain.play();
                break;
              case "gogogo":
                raceStatus.html("Race in progress!");
                theStart.play();
                break;
              case "finished":
                if (currentRace.IsComplete) {
                  raceStatus.html("Race complete!");
                } else {
                  raceStatus.html("Race finished!");
                  theStart.pause();
                  theStart.load();
                  self.fadeOutChain(theChain.volume);
                }
            }
          } else {
            raceStatus.html("Waiting for a race to begin&helip;");
          }
        };

        self.fadeOutChain = function (volume) {
          var factor = 0.01, speed = 50;
          if (volume > factor) {
            setTimeout(function () {
              self.fadeOutChain(theChain.volume -= factor);
            }, speed);
          } else {
            theChain.pause();
            theChain.load();
            theChain.volume = 1;
          }
        };

        race.client.getAllLeagues = function (currentLeaderBoards, currentRace) {
          self.updateLeagues(currentLeaderBoards);
          self.updateRace(currentRace);
        };

        race.client.updateLeagues = function (currentLeaderBoards) {
          self.updateLeagues(currentLeaderBoards);
        };

        race.client.updateRace = function (currentRace) {
          self.updateRace(currentRace);
        };

        self.getWidth = function () {
          return 100 / self.Leagues().length + '%';
        };
      };

      var vm = new LeaguesViewModel();
      // Start the connection
      $.connection.hub.start(function () { vm.init(); });

      ko.applyBindings(vm);
    });
  </script>
}